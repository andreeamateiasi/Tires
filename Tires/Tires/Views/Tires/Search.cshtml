@model Tires.Models.Search

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tire</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.Brand, new SelectList(ViewBag.brands,"Brands"), string.Empty)
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.TireHeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TireHeight, new SelectList(ViewBag.heights, "TireHeight"), string.Empty)
                @Html.ValidationMessageFor(model => model.TireHeight, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TireWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TireWeight, new SelectList(ViewBag.weights, "TireWeight"), string.Empty)
                @Html.ValidationMessageFor(model => model.TireWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TireDiameter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TireDiameter, new SelectList(ViewBag.diameters, "TireDiameter"), string.Empty)
                @Html.ValidationMessageFor(model => model.TireDiameter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TireType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TireType, new SelectList(ViewBag.weights, "TireType"), string.Empty)
                @Html.ValidationMessageFor(model => model.TireType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.categories, "CategoryId", "CategoryName"), string.Empty)
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>




</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
